{"version":3,"sources":["components/menu/Menu.tsx","components/appbar/Appbar.tsx","components/copyright/Copyright.tsx","components/message/Message.tsx","utils/FetchData.tsx","utils/Validators.tsx","pages/login/Login.tsx","pages/register/Register.tsx","pages/resetPass/ResetPass.tsx","pages/resetPass/UpdatePass.tsx","components/buttons/Button.tsx","components/cards/Card.tsx","components/cards/CardsList.tsx","pages/plans/Plans.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","createStyles","loggedIn","color","backgroundColor","opacity","padding","borderRadius","normal","menu","marginTop","SimpleMenu","props","React","useState","anchorEl","setAnchorEl","buttonName","menuItems","history","useHistory","aria-controls","aria-haspopup","onClick","event","currentTarget","length","className","Menu","id","keepMounted","open","Boolean","onClose","map","item","index","itemUrl","toLowerCase","replace","MenuItem","key","push","handleClickItem","theme","root","flexGrow","brand","marginRight","spacing","title","hidden","visibility","login","textDecoration","displayNone","display","ButtonAppBar","classes","value","setValue","AppBar","position","Toolbar","Typography","Button","variant","Tabs","onChange","newValue","indicatorColor","centered","Tab","label","Copyright","align","href","Date","getFullYear","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","message","alignItems","MySnackbarContentWrapper","other","Icon","SnackbarContent","clsx","aria-describedby","action","IconButton","aria-label","CustomizedSnackbars","setOpen","useEffect","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","registerRequest","userInfo","a","axios","post","res","loginRequest","email","password","resetPassRequest","updatePassRequest","authorization","validateEmail","test","validatePass","validateName","name","LoginPage","setEmail","setPassword","errPass","setErrPass","errEmail","setErrEmail","errorMessage","setErrorMessage","from","useLocation","state","pathname","displayError","setTimeout","handleChange","e","Container","component","maxWidth","CssBaseline","Avatar","style","onSubmit","preventDefault","then","status","data","userId","displayName","token","setUserState","catch","err","noValidate","TextField","margin","required","fullWidth","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","Grid","container","xs","to","Box","mt","SignUp","firstName","setFirstName","lastName","setLastName","errFN","setErrFN","errLN","setErrLN","console","log","sm","justify","ResetPass","successMessage","setSuccessMessage","pass","setPass","params","match","undefined","headers","fab","extendedIcon","chosenIcon","AddIcon","EditIcon","DeleteIcon","text","Fab","FloatingActionButtons","card","minHeight","MediaCard","Card","bestValue","gutterBottom","CardContent","price","period","Divider","btnText","CardsList","cards","Why","App","path","RegisterPage","ResetPassPage","UpdatePassPage","PlansPage","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63ad0766.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nconst useStyles = makeStyles(() =>\r\n  createStyles({\r\n    loggedIn: {\r\n      color: \"#c62828\",\r\n      backgroundColor: \"white\",\r\n      opacity: 0.7,\r\n      padding: \"0 8px 0 8px\",\r\n      borderRadius: \"50%\",\r\n    },\r\n    normal: {\r\n        color: \"white\"\r\n    },\r\n    menu: {\r\n        color: \"white\",\r\n        marginTop: \"8px\",\r\n    }\r\n  }),\r\n);\r\n\r\ntype Props = {\r\n    buttonName: string,\r\n    menuItems: Array<string>\r\n}\r\n\r\nconst SimpleMenu = (props: Props) =>{\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const { buttonName, menuItems } = props;\r\n  const { loggedIn, normal, menu } = useStyles();\r\n  let history = useHistory();\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClickItem = (itemUrl: string) => {\r\n    history.push(itemUrl);\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <span aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n          {buttonName.length === 1? \r\n          <h3 className={loggedIn}>{buttonName}</h3>: \r\n          (buttonName === \"menu\"? <div className={menu}><MenuIcon/></div> :\r\n          <div className={normal}>{buttonName}</div>)\r\n          }\r\n      </span>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n          {menuItems.map((item: string, index: number) => {\r\n              const itemUrl = \"/\" + item.toLowerCase().replace(\" \", \"-\");\r\n              return(\r\n                <MenuItem key={index} onClick={() => handleClickItem(itemUrl)}>{item}</MenuItem>\r\n              )\r\n          })}\r\n      </Menu>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SimpleMenu;","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Menu from '../../components/menu/Menu';\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Tabs, Tab } from '@material-ui/core';\r\nimport './Appbar.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    brand: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    hidden: {\r\n        visibility: \"hidden\"\r\n    },\r\n    login: {\r\n      textDecoration: 'none',\r\n      color: 'inherit'\r\n    },\r\n    displayNone: {\r\n      display: \"none\"\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const history = useHistory();\r\n  const menuItems = [ \"Why Us\", \"Features\", \"Plans\", \"Stories\", \"Resources\" ];\r\n\r\n\r\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n    setValue(newValue);\r\n    const itemUrl = \"/\" + menuItems[newValue - 1].toLowerCase().replace(\" \", \"-\");\r\n    history.push(itemUrl);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setValue(0);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n            <div className=\"mobile-menu\">\r\n              <Menu buttonName={\"menu\"} menuItems={menuItems}/>\r\n            </div>\r\n            <Typography className={classes.brand}>\r\n              <Button color=\"inherit\" onClick={handleClick}>Brand</Button>\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.title}></Typography>\r\n            <div className=\"tabs\">\r\n              <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"secondary\"\r\n              centered\r\n              >\r\n                  <Tab label=\"Home\" className={classes.displayNone}/>\r\n                  { menuItems.map( (item, index: number) => <Tab key={index}  label={item} /> ) }\r\n              </Tabs>\r\n            </div>\r\n            \r\n          <Button color=\"inherit\" className={classes.hidden}>Hidden </Button>\r\n          <Button color=\"inherit\" onClick={() => history.push(\"/login\")}>\r\n            Login\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MatLink from '@material-ui/core/Link';\r\n\r\n\r\nconst Copyright = () =>{\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <MatLink color=\"inherit\" href=\"https://material-ui.com/\">\r\n        BRAND\r\n      </MatLink>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default Copyright;","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\ninterface CustomProps{\r\n    message: string;\r\n    variant: keyof typeof variantIcon;\r\n}\r\n\r\nconst useStyles1 = makeStyles((theme: Theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  message: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n}));\r\n\r\nexport interface Props {\r\n  className?: string;\r\n  message?: string;\r\n  onClose?: () => void;\r\n  variant: keyof typeof variantIcon;\r\n}\r\n\r\nfunction MySnackbarContentWrapper(props: Props) {\r\n  const classes = useStyles1();\r\n  const { className, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={clsx(classes[variant], className)}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function CustomizedSnackbars(props: CustomProps) {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { message, variant } = props;\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n    }, []\r\n  );\r\n\r\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={handleClose}\r\n          variant={variant}\r\n          message={message}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}","// import { Category, Child, Item } from \"../types\";\r\nimport { UserInfo, Authorization } from '../types';\r\nimport axios from 'axios';\r\n\r\nconst authorization = (token: string) => {\r\n    return { headers: {'Authorization': `Bearer ${token}`}}\r\n};\r\n\r\nexport const registerRequest = async (userInfo : UserInfo) => {\r\n    const res = await axios.post(\"http://localhost:4000/users/signup\", userInfo);\r\n    return res;\r\n}\r\n\r\nexport const loginRequest = async (email: string, password: string) => {\r\n    const res = await axios.post(\"http://localhost:4000/users/login\", { email: email, password: password });\r\n    return res;\r\n}\r\n\r\nexport const resetPassRequest = async (email: string) => {\r\n    const res = await axios.post(\"http://localhost:4000/users/resetPass\", { email: email });\r\n    return res;\r\n}\r\n\r\nexport const updatePassRequest = async (password: string, authorization: Authorization) => {\r\n    const res = await axios.post(\"http://localhost:4000/users/updatePass\", { password: password }, authorization);\r\n    return res;\r\n}\r\n\r\n// export const fetchChildren = async (token: string) => {\r\n//     const res = await axios.get(\"http://localhost:4000/children\", authorization(token));\r\n//     const childrenArr: Array<Child> = res.data.children;\r\n//     return childrenArr;\r\n// };\r\n\r\n// export const fetchCategories = async (child: Child, token: string) => {\r\n//     const res = await axios.post(\"http://localhost:4000/categories/all\", { childId: child._id }, authorization(token));\r\n//     const categoriesArr: Array<Category> = res.data.categories;\r\n//     return categoriesArr;\r\n// };\r\n\r\n// export const fetchItems = async (category: Category, token: string) => {\r\n//     const res = await axios.post(\"http://localhost:4000/items/all\", { categoryId: category._id }, authorization(token));\r\n//     const itemsArr: Array<Item> = res.data.items;\r\n//     return itemsArr;\r\n// };\r\n\r\nexport const deleteItem = async (itemId: string, token: string) => {\r\n    const res = await axios.delete(\"http://localhost:4000/items/\" + itemId, authorization(token));\r\n    const data = res.data.deletedCount;    \r\n    return data;\r\n}\r\n\r\nexport const addItem = async (data: FormData, token: string) => {\r\n    const res = await axios.post(\"http://localhost:4000/items/\", data, authorization(token));\r\n    return res;\r\n};\r\n\r\nexport const updateItem = async (data: FormData, token: string, itemId: string) => {\r\n    const res = await axios.patch(\"http://localhost:4000/items/\" + itemId, data, authorization(token));\r\n    return res;\r\n};\r\n\r\nexport const addChild = async (data: FormData, token: string) => {\r\n    const res = await axios.post(\"http://localhost:4000/children\", data, authorization(token));\r\n    return res;\r\n};\r\n\r\nexport const updateChild = async (data: FormData, token: string, childId: string) => {\r\n    const res = await axios.patch(\"http://localhost:4000/children/\" + childId, data, authorization(token));\r\n    return res;\r\n};\r\n\r\nexport const deleteChild = async (token: string, childId: string) => {\r\n    const res = await axios.delete(\"http://localhost:4000/children/\" + childId, authorization(token));\r\n    return res;\r\n};","\r\nconst validateEmail = (email: string) => {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n  \r\nconst validatePass = (password: string) => {\r\n    var re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/;\r\n    return re.test(password);\r\n}\r\n\r\nconst validateName = (name: string) =>{\r\n    return name.length > 3; \r\n  }\r\n\r\nexport {\r\n    validateEmail,\r\n    validatePass,\r\n    validateName\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Message from '../../components/message/Message';\r\nimport { SignInProps } from '../../types';\r\nimport { loginRequest } from '../../utils/FetchData';\r\nimport { validatePass, validateEmail } from '../../utils/Validators';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './Login.css';\r\n\r\n\r\nconst LoginPage: React.FC<SignInProps> = (props: SignInProps) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errPass, setErrPass] = useState(false);\r\n  const [errEmail, setErrEmail] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n  const displayError = (message: string) => {\r\n    setErrorMessage(message)\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 5000);\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<any>) => {\r\n    e.preventDefault();\r\n    \r\n    if(email === \"\"){ setErrEmail(true); }\r\n    if(password === \"\"){ setErrPass(true); }    \r\n\r\n    if(!errPass && !errEmail && email !== \"\" && password !== \"\"){\r\n      loginRequest(email, password)\r\n      .then(res => {\r\n        if (res.status === 200){\r\n          const { userId, displayName, token } = res.data;\r\n          history.replace(from);\r\n          props.setUserState({ id: userId, displayName: displayName, token: token })\r\n        }else{\r\n          displayError(\"Something went wrong! Try again!\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        displayError(err.message);\r\n      })\r\n    }else{\r\n      displayError(\"Your email or password are invalid!\")\r\n    }\r\n  }\r\n\r\n  const handleChange = (e: React.FormEvent<any>) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch(name){\r\n      case \"password\":\r\n        setPassword(value);\r\n        if (!validatePass(value)){\r\n          setErrPass(true);\r\n        }else{\r\n          setErrPass(false);\r\n        }\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        if (!validateEmail(value)){\r\n          setErrEmail(true);\r\n        }else{\r\n          setErrEmail(false);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n  <>\r\n  <Container component=\"main\" maxWidth=\"xs\">\r\n    <CssBaseline />\r\n    <div className=\"paper\">\r\n      <Avatar className=\"avatar\" style={{ backgroundColor: \"#e91e63\" }}>\r\n        <LockOutlinedIcon />\r\n      </Avatar>\r\n      <Typography component=\"h1\" variant=\"h5\">\r\n        Login\r\n      </Typography>\r\n      <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          error={errEmail}\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          error={errPass}\r\n          value={password}\r\n          onChange={handleChange}\r\n        />\r\n        <FormControlLabel\r\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n          label=\"Remember me\"\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          style={{ margin: \"10px 0 20px 0\"}}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <Grid container className=\"grid-container\">\r\n          <Grid item xs className=\"grid-item-left\">\r\n              <Link to=\"/reset-pass\" className=\"link\">Forgot password?</Link>\r\n          </Grid>\r\n          <Grid item>\r\n              <Link to=\"/register\" className=\"link\">Don't have an account? Sign Up</Link>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n    \r\n  </Container>\r\n  <Container component=\"main\" maxWidth=\"sm\">\r\n  <Box mt={8}>\r\n    { errorMessage !== \"\" ? \r\n      (<Message message={errorMessage} variant=\"error\"/>) : null\r\n    }\r\n  </Box>\r\n  </Container>\r\n  </>\r\n  )\r\n}\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport Message from '../../components/message/Message';\r\nimport { validateEmail, validatePass, validateName } from '../../utils/Validators';\r\nimport { registerRequest } from '../../utils/FetchData';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './Register.css';\r\n\r\nconst SignUp : React.FC = () => {\r\nconst [firstName, setFirstName] = useState(\"\");\r\nconst [lastName, setLastName] = useState(\"\");\r\nconst [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [errFN, setErrFN] = useState(false);\r\nconst [errLN, setErrLN] = useState(false);\r\nconst [errEmail, setErrEmail] = useState(false);\r\nconst [errPass, setErrPass] = useState(false);\r\nconst [errorMessage, setErrorMessage] = useState(\"\");\r\nconst history = useHistory();\r\nconst location = useLocation();\r\nconst { from } = location.state || { from: { pathname: \"/login\" } };\r\n\r\nconst displayError = (message: string) => {\r\n    setErrorMessage(message);\r\n    setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n    }, 5000);\r\n  }\r\n  const handleSubmit = (e: React.FormEvent<any>) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateName(firstName)) { setErrFN(true); }\r\n    if (lastName === \"\") { setErrLN(true); }\r\n    if (email === \"\") { setErrEmail(true); }\r\n    if (password === \"\") { setErrPass(true); }\r\n\r\n    if(firstName !== \"\" && lastName !== \"\" && email !== \"\" && password !== \"\"){      \r\n      if (!errFN && !errLN && !errEmail && ! errPass){\r\n\r\n        const userInfo = {\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          email: email,\r\n          password: password\r\n        }\r\n        \r\n        registerRequest(userInfo)\r\n        .then(res => {\r\n          if (res.data.message === \"User created !\"){\r\n            history.replace(from);\r\n          }else{\r\n            console.log(res.data);\r\n            displayError(\"Something went wrong! Try again!\")\r\n          }\r\n        })\r\n        .catch(err => {\r\n          displayError(err.message);\r\n        })\r\n      }else{\r\n        displayError(\"Your email or password are invalid!\");\r\n      }\r\n    }else{\r\n      displayError(\"You have to fill out all of the fields!\");\r\n    }\r\n  }\r\n  const handleChange = (e: React.FormEvent<any>) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch(name){\r\n      case \"firstName\":\r\n        setFirstName(value);\r\n        if (!validateName(value)){\r\n          setErrFN(true);\r\n        }else{\r\n          setErrFN(false);\r\n        }\r\n        break;\r\n      case \"lastName\":\r\n        setLastName(value);\r\n        if (!validateName(value)){\r\n          setErrLN(true);\r\n        }else{\r\n          setErrLN(false);\r\n        }\r\n        break;\r\n      case \"email\":\r\n        setEmail(value);\r\n        if (!validateEmail(value)){\r\n          setErrEmail(true);\r\n        }else{\r\n          setErrEmail(false);\r\n        }\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        if (!validatePass(value)){\r\n          setErrPass(true);\r\n        }else{\r\n          setErrPass(false);\r\n        }\r\n        break;\r\n    }\r\n  } \r\n\r\n  return (\r\n    <>\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className=\"paper\">\r\n        <Avatar className=\"avatar\" style={{ backgroundColor: \"#e91e63\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"fname\"\r\n                error={errFN}\r\n                name=\"firstName\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={firstName}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"lastName\"\r\n                autoComplete=\"lname\"\r\n                error={errLN}\r\n                value={lastName}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                error={errEmail}\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                error={errPass}\r\n                value={password}\r\n                onChange={handleChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                label= \"I want to receive inspiration, marketing promotions and updates via email.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"submit\"\r\n            style={{ margin: \"15px 0 20px 0\"}}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n                <Link to=\"/login\" className=\"link\">Already have an account? Sign in</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Box mt={6}>\r\n        { errorMessage !== \"\" ? \r\n          (<Message message={errorMessage} variant=\"error\"/>) : null\r\n        }\r\n      </Box>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport { resetPassRequest } from '../../utils/FetchData';\r\n\r\nimport Message from '../../components/message/Message';\r\nimport { validateEmail } from '../../utils/Validators';\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './ResetPass.css';\r\n\r\nconst ResetPass: React.FC<RouteComponentProps> = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [errEmail, setErrEmail] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n\r\n  const displayError = (message: string) => {\r\n    setErrorMessage(message)\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n        }, 5000);\r\n  }\r\n\r\n  const displaySuccessMessage = (message: string) => {\r\n    setSuccessMessage(message)\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n        }, 5000);\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<any>) => {\r\n    e.preventDefault();\r\n    \r\n    if(email === \"\"){ setErrEmail(true); }\r\n\r\n    if(!errEmail && email !== \"\"){ \r\n      resetPassRequest(email)\r\n      .then(res => {\r\n        if (res.status === 200){\r\n          displaySuccessMessage(\"Soon you'll receive an email with a link that will alow you to reset your password!\");\r\n        }else{\r\n          displayError(\"Something went wrong! Try again!\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        displayError(err.message);\r\n      })\r\n    }else{\r\n      displayError(\"Invalid email!\")\r\n    }\r\n  }\r\n\r\n  const handleChange = (e: React.FormEvent<any>) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch(name){\r\n      case \"email\":\r\n        setEmail(value);\r\n        if (!validateEmail(value)){\r\n          setErrEmail(true);\r\n        }else{\r\n          setErrEmail(false);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Container component=\"main\" maxWidth=\"xs\" className=\"main\">\r\n      <CssBaseline />\r\n      <div className=\"paper\">\r\n        <Avatar className=\"avatar\" style={{ backgroundColor: \"#e91e63\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          We need your e-mail address !\r\n        </Typography>\r\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          error={errEmail}\r\n          value={email}\r\n          onChange={handleChange}\r\n        />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"submit\"\r\n            style={{ margin: \"20px 0 20px 0\"}}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Box mt={25}>\r\n        { errorMessage !== \"\" ?\r\n          (<Message message={errorMessage} variant=\"error\"/>) : null\r\n        }\r\n        { successMessage !== \"\" ? \r\n          (<Message message={successMessage} variant=\"success\"/>) : null\r\n        }\r\n      </Box>        \r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ResetPass;","import React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { RouteComponentProps } from 'react-router';\r\n\r\nimport Message from '../../components/message/Message';\r\nimport { validatePass } from '../../utils/Validators';\r\nimport { updatePassRequest } from '../../utils/FetchData';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './ResetPass.css';\r\n\r\nconst ResetPass: React.FC<RouteComponentProps> = (props) => {\r\n  const [pass, setPass] = useState(\"\");\r\n  const [errPass, setErrPass] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [successMessage, setSuccessMessage] = useState(\"\");\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const { from } = location.state || { from: { pathname: \"/login\" } };\r\n\r\n  const displayError = (message: string) => {\r\n    setErrorMessage(message)\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n        }, 5000);\r\n  }\r\n\r\n  const displaySuccessMessage = (message: string) => {\r\n    setSuccessMessage(message)\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n        }, 5000);\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<any>) => {\r\n    e.preventDefault();\r\n    \r\n    if(pass === \"\"){ setErrPass(true); }\r\n\r\n    if(!errPass && pass !== \"\"){\r\n      const params: { token?: string} = props.match.params;\r\n      const token = params.token !== undefined? params.token: \"\";\r\n    \r\n      const authorization = {\r\n        headers: {'Authorization': `Bearer ${token}`}\r\n      };\r\n\r\n      updatePassRequest(pass, authorization)\r\n      .then(res => {\r\n        if (res.status === 200){\r\n          displaySuccessMessage(res.data.message);\r\n          setTimeout(() => {\r\n            history.replace(from);\r\n          }, 5000);\r\n        }else{\r\n          displayError(\"Something went wrong! Try again!\")\r\n        }\r\n      })\r\n      .catch(err => {\r\n        displayError(err.message);\r\n      })\r\n    }else{\r\n      displayError(\"Invalid email!\")\r\n    }\r\n  }\r\n\r\n  const handleChange = (e: React.FormEvent<any>) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch(name){\r\n      case \"pass\":\r\n        setPass(value);\r\n        if (!validatePass(value)){\r\n          setErrPass(true);\r\n        }else{\r\n          setErrPass(false);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n    <Container component=\"main\" maxWidth=\"xs\" className=\"main\">\r\n      <CssBaseline />\r\n      <div className=\"paper\">\r\n        <Avatar className=\"avatar\" style={{ backgroundColor: \"#e91e63\" }}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Reset Your Password\r\n        </Typography>\r\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"pass\"\r\n          label=\"Password\"\r\n          name=\"pass\"\r\n          type=\"password\"\r\n          autoComplete=\"pass\"\r\n          autoFocus\r\n          error={errPass}\r\n          value={pass}\r\n          onChange={handleChange}\r\n        />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"submit\"\r\n            style={{ margin: \"20px 0 20px 0\"}}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n\r\n    <Container component=\"main\" maxWidth=\"sm\">\r\n      <Box mt={25}>\r\n        { errorMessage !== \"\" ?\r\n          (<Message message={errorMessage} variant=\"error\"/>) : null\r\n        }\r\n        { successMessage !== \"\" ? \r\n          (<Message message={successMessage} variant=\"success\"/>) : null\r\n        }\r\n      </Box>        \r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default ResetPass;","import React from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    fab: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  }),\r\n);\r\n\r\nconst variantIcon = {\r\n    add: AddIcon,\r\n    edit: EditIcon,\r\n    delete: DeleteIcon,\r\n    contained: \"contained\",\r\n    outlined: \"outlined\"\r\n};\r\n\r\nconst colors = {\r\n    primary: \"primary\",\r\n    secondary: \"secondary\",\r\n    default: \"\"\r\n}\r\n\r\ninterface CustomProps{\r\n    color: keyof typeof colors;\r\n    variant: keyof typeof variantIcon;\r\n    text?: string;\r\n}\r\n\r\nconst chosenIcon = (color: keyof typeof colors, variant: keyof typeof variantIcon, \r\n                    className: string, text: string | undefined) => {\r\n\r\n    if(variant === \"add\"){\r\n      return (\r\n      <Fab color={color} aria-label={variant} className={className}>\r\n          <AddIcon /> \r\n      </Fab>\r\n      )\r\n    }else if(variant === \"edit\"){\r\n      return (\r\n        <Fab color={color} aria-label={variant} className={className}>\r\n            <EditIcon />\r\n        </Fab>\r\n        )\r\n    }else if(variant === \"delete\"){\r\n      return (\r\n        <Fab color={color} aria-label={variant} className={className}>\r\n            <DeleteIcon />\r\n        </Fab>\r\n        )\r\n    }else if(variant === \"contained\"){\r\n      return (\r\n        <Button variant=\"contained\" color={color} className={className}>\r\n          {text}\r\n        </Button>\r\n        )\r\n    }else if(variant === \"outlined\"){\r\n      return (\r\n        <Button variant=\"outlined\" color={color} className={className}>\r\n          {text}\r\n        </Button>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default function FloatingActionButtons(props: CustomProps) {\r\n  const classes = useStyles();\r\n  const { color, variant, text } = props;\r\n  \r\n  return (\r\n    <div>\r\n        { chosenIcon(color, variant, classes.fab, text) }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '../../components/buttons/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    maxWidth: 245,\r\n    margin: 40,\r\n    minHeight: 420\r\n  },\r\n  minHeight: {\r\n    minHeight: 75\r\n  }\r\n});\r\n\r\ntype Card = {\r\n  id: string,\r\n  title: string,\r\n  price: string,\r\n  btnText: string,\r\n  period: string,\r\n  text: string,\r\n  bestValue: boolean\r\n}\r\n\r\nexport default function MediaCard(props: { card: Card }) {\r\n  const classes = useStyles();\r\n  const { card } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n\r\n        { card.bestValue? (\r\n        <>\r\n          <div className=\"best-value\">\r\n            <Typography gutterBottom variant=\"overline\" component=\"h5\">\r\n                Best Value\r\n            </Typography>\r\n          </div>\r\n        </>\r\n        ) : null }\r\n        \r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {card.title}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n            {card.price}\r\n          </Typography>\r\n          <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n            {card.period}\r\n          </Typography>\r\n          <br/>\r\n          <Divider variant=\"middle\" />\r\n          <br/>\r\n\r\n          { card.bestValue? (\r\n            <Button color=\"primary\" variant=\"outlined\" text={card.btnText} />\r\n          ) : (\r\n            <Button color=\"primary\" variant=\"outlined\" text={card.btnText} />\r\n          )}\r\n          \r\n          <br/>\r\n          <Divider variant=\"middle\" />\r\n          <br/>\r\n          <Typography className={classes.minHeight} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {card.text}\r\n          </Typography>\r\n        </CardContent>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport Card from './Card';\r\nimport './Card.css';\r\n\r\n\r\nconst CardsList = () => {\r\n\r\n    const cards = [\r\n        { \r\n            id: \"1\",\r\n            title: \"FREE\",\r\n            price: \"$0\",\r\n            btnText: \"Free SignUp\",\r\n            period: \"per month\",\r\n            text: \"Collect & respond to Trustpilot reviews for free.\",\r\n            bestValue: false\r\n        },\r\n        { \r\n            id: \"2\",\r\n            title: \"Lite\",\r\n            price: \"$300\",\r\n            btnText: \"Free Demo\",\r\n            period: \"per month\",\r\n            text: \"Showcase reviews on your website & clearly demonstrate marketing ROI.\",\r\n            bestValue: false\r\n        },\r\n        { \r\n            id: \"3\",\r\n            title: \"Pro\",\r\n            price: \"$550\",\r\n            btnText: \"Free Demo\",\r\n            period: \"per month\",\r\n            text: \"Give your marketing & sales a significant boost with a wide range of customizable tools.\",\r\n            bestValue: true\r\n        },\r\n        { \r\n            id: \"4\",\r\n            title: \"Enterprise\",\r\n            price: \"Custom\",\r\n            btnText: \"Get a quote\",\r\n            period: \"per month\",\r\n            text: \"Full access to Trustpilot Business with superior integrations, data protection & account management.\",\r\n            bestValue: false\r\n        },\r\n    ]\r\n\r\n    return (\r\n        <>\r\n            {cards.map( card => <Card key={card.id} card={card} /> )}\r\n            \r\n            { cards.length > 0 ? (\r\n                <>\r\n                    <div className=\"hidden\">\r\n                        <Card card={cards[0]}/>\r\n                    </div>\r\n                    <div className=\"hidden\">\r\n                        <Card card={cards[0]}/>\r\n                    </div>\r\n                </>\r\n            ): null }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CardsList;","import React from 'react';\r\nimport CardsList from '../../components/cards/CardsList';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport './Plans.css';\r\n\r\nconst Why = () => {\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"title\">\r\n                <Typography gutterBottom variant=\"h4\" component=\"h2\">\r\n                    Choose a plan that suits your needs\r\n                </Typography>\r\n            </div>\r\n            \r\n            <div className=\"card-list\">\r\n               <CardsList /> \r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Why;","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route,\n  Switch,\n  // Redirect \n} from 'react-router-dom';\n\nimport AppBar from './components/appbar/Appbar';\nimport Copyright from './components/copyright/Copyright';\n\nimport LoginPage from './pages/login/Login';\nimport RegisterPage from './pages/register/Register';\nimport ResetPassPage from './pages/resetPass/ResetPass';\nimport UpdatePassPage from './pages/resetPass/UpdatePass';\nimport PlansPage from './pages/plans/Plans';\n\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar />\n        <div className=\"main-container\">\n          <Switch>\n              <Route path=\"/login\" component={LoginPage}/>\n              <Route path=\"/register\" component={RegisterPage}/>\n              <Route path=\"/reset-pass\" component={ResetPassPage}/>\n              <Route path=\"/update-pass/:token\" component={UpdatePassPage}/>\n\n              <Route path=\"/plans\" component={PlansPage}/>          \n          </Switch>\n        </div>\n        <Copyright />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}